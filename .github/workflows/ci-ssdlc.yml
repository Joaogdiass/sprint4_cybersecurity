name: CI - SSDLC (build + tests + SAST + SCA + DAST)

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: "0 9 * * 1"

jobs:
  build_and_tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install pytest pytest-cov pyjwt || true

      - name: Run unit + security tests
        run: |
          if [ -d tests ]; then pytest -q tests --maxfail=1 --disable-warnings; else echo "No tests"; fi

  sast_semgrep:
    runs-on: ubuntu-latest
    needs: build_and_tests
    permissions:
      contents: read
      security-events: write
      actions: read
    steps:
      - uses: actions/checkout@v4

      - name: Run Semgrep (SAST + project rules)
        uses: returntocorp/semgrep-action@v1
        with:
          config: >-
            p/security-audit
            semgrep-rules/secure.yml
        env:
          SEMGREP_APP_TOKEN: ${{ secrets.SEMGREP_APP_TOKEN }}

  sca_dependencies:
    runs-on: ubuntu-latest
    needs: build_and_tests
    steps:
      - uses: actions/checkout@v4

      - name: Install Dependency-Check
        run: |
          curl -Ls https://github.com/jeremylong/DependencyCheck/releases/latest/download/dependency-check.zip -o dc.zip
          unzip -q dc.zip -d $HOME/dc
          echo "$HOME/dc/dependency-check/bin" >> $GITHUB_PATH

      - name: Run Dependency-Check (SCA)
        run: |
          dependency-check.sh \
            --project "Sprint3" \
            --scan "." \
            --format "HTML" \
            --out . \
            --failOnCVSS 7.0

      - name: Upload SCA Report
        uses: actions/upload-artifact@v4
        with:
          name: dependency-check-report
          path: dependency-check-report.html

  dast_zap:
    runs-on: ubuntu-latest
    needs: build_and_tests
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Start demo web (optional)
        run: |
          if [ -f app.py ]; then pip install -r requirements.txt || true; nohup python app.py & fi
          for i in {1..30}; do if curl -sSf http://localhost:8000 >/dev/null; then break; fi; sleep 2; done || true

      - name: ZAP Baseline (DAST)
        uses: zaproxy/action-baseline@v0.14.0
        with:
          target: 'http://localhost:8000'
          token: ${{ secrets.GITHUB_TOKEN }}
          fail_action: true
          rules_file_name: 'zap-rules.tsv'
